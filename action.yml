name: "Increment Version"
description: "An action that controls version increment for CI's"
inputs:
  app-id:
    description: "GitHub App ID used to generate the token"
    required: true
  private-key:
    description: "GitHub App private key"
    required: true
  current-version-variable:
    description: "Current version repository variable containing the project version (format: MAJOR.MINOR.PATCH)"
    required: true
    default: CURRENT_VERSION
runs:
  using: "composite"
  steps:
    - name: Configure Git
      run: |
        git config user.name "GitHub Actions"
        git config user.email "actions@github.com"
      shell: bash
    - name: Generate GitHub App token
      id: app-token
      uses: actions/create-github-app-token@v2
      with:
        app-id: ${{ inputs.app-id }}
        private-key: ${{ inputs.private-key }}
    - name: Increment version
      env:
        APP_TOKEN: ${{ steps.app-token.outputs.token }}
      run: |
        CURRENT_VERSION_VAR="${{ inputs.current-version-variable }}"
        RESPONSE=$(curl -s -f \
          -H "Authorization: Bearer $APP_TOKEN" \
          -H "Accept: application/vnd.github+json" \
          -H "X-GitHub-Api-Version: 2022-11-28" \
          https://api.github.com/repos/${{ github.repository }}/actions/variables/$CURRENT_VERSION_VAR)
        if [ $? -ne 0 ]; then
          echo "ERROR: Failed to fetch variable $CURRENT_VERSION_VAR"
          exit 1
        fi
        CURRENT_VERSION=$(echo "$RESPONSE" | jq -r '.value')
        if [ -z "$CURRENT_VERSION" ]; then
          echo "ERROR: CURRENT_VERSION repository variable is not set"
          exit 1
        fi
        if ! [[ "$CURRENT_VERSION" =~ ^[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
          echo "ERROR: Invalid version format in vars.CURRENT_VERSION $CURRENT_VERSION"
          exit 1
        fi
        IFS="." read -r MAJOR MINOR PATCH <<< "$CURRENT_VERSION"
        echo "Current version: $CURRENT_VERSION"
        PATCH=$((PATCH + 1))
        NEW_VERSION="$MAJOR.$MINOR.$PATCH"
        echo "New version: $NEW_VERSION"
        echo "NEW_VERSION=$NEW_VERSION" >> $GITHUB_ENV
      shell: bash
    - name: Update CURRENT_VERSION variable
      env:
        APP_TOKEN: ${{ steps.app-token.outputs.token }}
      run: |
        curl -X PATCH \
          -H "Authorization: Bearer $APP_TOKEN" \
          -H "Accept: application/vnd.github+json" \
          -H "X-GitHub-Api-Version: 2022-11-28" \
          https://api.github.com/repos/${{ github.repository }}/actions/variables/CURRENT_VERSION \
          -d "{\"name\":\"CURRENT_VERSION\",\"value\":\"${{ env.NEW_VERSION }}\"}"
      shell: bash
